pipeline {
    agent {label "stage"}

    stages {


         stage('clean_ws') {
            steps {
                cleanWs()
            }
        }
          

        stage('Build env file') {
            // Creating env file 
            steps {
                    echo 'Building..'
                     script {
                        withCredentials([string(credentialsId: 'ok_client_id', variable: 'OKTA_CLIENT_ID'), string(credentialsId: 'ok_client_secret', variable:'OKTA_CLIENT_SECRET')]) {
                    
                        echo 'creating .env file'
                        sh '''
                     
                        echo "# Host configuration
                        PORT=8080
                        HOST=0.0.0.0
                        NODE_ENV=development
                        HOST_URL=Http://40.74.50.192:8080
               	        COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
                        # Okta configuration
                        OKTA_ORG_URL=https://dev-72046139.okta.com
                        OKTA_CLIENT_ID=$OKTA_CLIENT_ID
                        OKTA_CLIENT_SECRET=$OKTA_CLIENT_SECRET
                        # Postgres configuration
                        PGHOST=10.0.1.4
                        PGUSERNAME=postgres
                        PGDATABASE=postgres
                        PGPASSWORD=password
                        PGPORT=5432" > .env
                        '''
                        }
                    }
            }

        }

        stage('Deploy to Staging') {
            steps {
                    sh 'sudo docker kill $(sudo docker ps -q)'
                    sh 'sudo docker run -d --env-file .env -p 8080:8080 $DOCKER_REPOSITORY/weight-tracker:latest'
            }
        }
        

        stage('Wait for Approval') {
            
            steps{

                input "Deploy to prod?"
           }
        }


        stage('Deploy to prod') {
           
            steps {
                echo 'Prod..'
            }
        }
    }
     environment {
        DOCKER_REPOSITORY = 'nirh237'
        DOCKER_CREDS = credentials('docker-password')
    }
}